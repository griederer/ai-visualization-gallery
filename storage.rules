rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(uid) {
      return isAuthenticated() && request.auth.uid == uid;
    }
    
    function isValidImage() {
      return request.resource.contentType.matches('image/.*') &&
             request.resource.size < 10 * 1024 * 1024; // 10MB max
    }
    
    // Visualization images
    match /visualizations/images/{imageId} {
      allow read: if true; // Public read
      allow create: if isAuthenticated() && isValidImage();
      allow update, delete: if isAuthenticated(); // Should verify ownership through Firestore
    }
    
    // Visualization thumbnails
    match /visualizations/thumbnails/{thumbnailId} {
      allow read: if true; // Public read
      allow write: if false; // Only through Cloud Functions
    }
    
    // User avatars
    match /users/avatars/{userId} {
      allow read: if true; // Public read
      allow create, update: if isOwner(userId) && isValidImage();
      allow delete: if isOwner(userId);
    }
  }
}