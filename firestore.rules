rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(uid) {
      return isAuthenticated() && request.auth.uid == uid;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Visualizations rules
    match /visualizations/{visualizationId} {
      // Anyone can read published visualizations
      allow read: if resource.data.isPublished == true || isOwner(resource.data.author.id) || isAdmin();
      
      // Only authenticated users can create
      allow create: if isAuthenticated() && 
        request.resource.data.author.id == request.auth.uid;
      
      // Only owner or admin can update/delete
      allow update, delete: if isOwner(resource.data.author.id) || isAdmin();
    }
    
    // Users rules
    match /users/{userId} {
      // Users can read their own profile or public profiles
      allow read: if isOwner(userId) || resource.data.isPublic == true || isAdmin();
      
      // Users can only create/update their own profile
      allow create, update: if isOwner(userId);
      
      // Only admins can delete users
      allow delete: if isAdmin();
    }
    
    // Categories - publicly readable, admin writable
    match /categories/{categoryId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Tags - publicly readable, admin writable
    match /tags/{tagId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Stats - publicly readable, system writable through functions
    match /stats/{statId} {
      allow read: if true;
      allow write: if false; // Only through Cloud Functions
    }
  }
}